spring:
  application:
    name: business-organization
  profiles:
    active: dev
server:
  port: 11100
mybatis-plus:
  mapper-locations: classpath:mapper/**Mapper.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: cn.ffcs.uoo
  global-config:
    #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
    id-type: 1
    #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
    field-strategy: 2
    #驼峰下划线转换
    db-column-underline: true
    #刷新mapper 调试神器
    refresh-mapper: true
    #数据库大写下划线转换
    #capital-mode: true
    #序列接口实现类配置
    #key-generator: com.baomidou.springboot.xxx
    #逻辑删除配置（下面3个配置）
    logic-delete-value: 0
    logic-not-delete-value: 1
    #自定义SQL注入器
    #sql-injector: com.baomidou.mybatisplus.mapper.LogicSqlInjector
    #自定义填充策略接口实现
    #meta-object-handler: cn.ffcs.uoo.base.common.tool.util.UooMetaObjectHandler
    meta-object-handler: cn.ffcs.uoo.core.user.util.MyMetaObjectHandler
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false

feign:
  ## 配置httpclient线程池
  httpclient:
    enabled: true
    max-connections: 200 # 默认值
    max-connections-per-route: 50 # 默认值
    # 连接超时，默认：2000/毫秒
    connection-timeout: 2000
    # 生存时间，默认：900L
    time-to-live: 900
    # 响应超时的时间单位，默认：TimeUnit.SECONDS
    #    timeToLiveUnit: SECONDS
  #路由超时，即socket超时设置
ribbon:
  ReadTimeout: 600000
  ConnectTimeout: 600000
  MaxAutoRetries: 0
  MaxAutoRetriesNextServer: 1

logging:
  level:
    cn.ffcs.uoo: info

# 默认的profile为dev，其他环境通过指定启动参数使用不同的profile，比如：
#   测试环境：sh spring-boot.sh start business-user-0.0.1-SNAPSHOT.jar --spring.profiles.active=dev
#   生产环境：sh spring-boot.sh start business-user-0.0.1-SNAPSHOT.jar --spring.profiles.active=pro


---
spring:
  profiles: dev
  datasource:
    druid:
      driver-class-name:  oracle.jdbc.OracleDriver
      url: jdbc:oracle:thin:@134.96.167.19:1521:uomdb1
      username: octopus
      password: octopus

      initial-size: 60
      min-idle: 4
      max-active: 200
      max-wait: -1
      time-between-eviction-runs-millis: 600000
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1 FROM DUAL
      validationQueryTimeout: 50
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      maxPoolPreparedStatementPerConnectionSize: 20
      filters: stat,wall,log4j
      filter:
        stat:
          enabled: true
          log-slow-sql: true
          slow-sql-millis: 10000
          merge-sql: true
        slf4j:
          enabled: true
          connection-log-enabled: true
          connection-close-after-log-enabled: true
          connection-commit-after-log-enabled: true
          connection-connect-after-log-enabled: true
          connection-connect-before-log-enabled: true
          connection-log-error-enabled: true
          data-source-log-enabled: true
          result-set-log-enabled: true
          statement-log-enabled: true
        wall:
          enabled: true
          config:
            alter-table-allow: false
            truncate-allow: false
            drop-table-allow: false
            #是否允许非以上基本语句的其他语句，缺省关闭，通过这个选项就能够屏蔽DDL
            none-base-statement-allow: false
            #检查UPDATE语句是否无where条件，这是有风险的，但不是SQL注入类型的风险
            update-where-none-check: true
            #SELECT ... INTO OUTFILE 是否允许，这个是mysql注入攻击的常见手段，缺省是禁止的
            select-into-outfile-allow: false
            #是否允许调用Connection.getMetadata方法，这个方法调用会暴露数据库的表信息
            metadata-allow: true
            #允许多条sql一起执行
            multiStatementAllow: true
          #对被认为是攻击的SQL进行LOG.error输出
          log-violation: true
          #对被认为是攻击的SQL抛出SQLExcepton
          throw-exception: true
          #db-type: mysql
      web-stat-filter:
        enabled: true
        url-pattern: /*
        exclusions: '*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*'
        #你可以配置principalSessionName，使得druid能够知道当前的cookie的用户是谁
        #principal-cookie-name: admin
        #你可以配置principalSessionName，使得druid能够知道当前的session的用户是谁
        #principal-session-name: admin
        #设置profileEnable能够监控单个url调用的sql列表。
        profile-enable: true
        #session统计功能
        session-stat-enable: false
        #最大session数
        session-stat-max-count: 100000
      stat-view-servlet:
        #allow: ${GATEWAY_HOST:172.26.114.241}
        enabled: true
        login-username: ${DRUID_USER:admin}
        login-password: ${DRUID_PWD:admin}
        url-pattern: /druid/*
        #允许清除记录
        reset-enable: false

  rabbitmq:
    host: 134.96.253.221
    port: 5672
    username: Sub_Pub_Uoo
    password: "@rasPwWtiFtmDsZnuT80OnxNBUnZvcpBEkK&g8En"

  zipkin:
    base-url: http://134.96.253.223:8600
  sleuth:
    sampler:
      percentage: 0.5

eureka:
  instance:
    appname: business-organization
    hostname: ${spring.cloud.client.ipAddress}
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.cloud.client.ipAddress}:${server.port}
    lease-expiration-duration-in-seconds: 30
    lease-renewal-interval-in-seconds: 10
  server:
    port: 8751
  client:
    service-url:
      defaultZone:  http://134.96.253.221:${eureka.server.port}/eureka/,http://134.96.253.222:${eureka.server.port}/eureka/,http://134.96.253.223:${eureka.server.port}/eureka/

---
spring:
  profiles: pro
  datasource:
    druid:
      url: jdbc:oracle:thin:@(DESCRIPTION = (ADDRESS = (PROTOCOL = TCP)(HOST = 134.96.248.48)(PORT = 3436))(ADDRESS = (PROTOCOL = TCP)(HOST = 134.96.248.49)(PORT = 3436))(CONNECT_DATA = (SERVER = DEDICATED)(SERVICE_NAME = ZJ4APRD)))
      driver-class-name:  oracle.jdbc.OracleDriver
      username: octopus
      password: octopus

      initial-size: 60
      min-idle: 4
      max-active: 200
      max-wait: -1
      time-between-eviction-runs-millis: 600000
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1 FROM DUAL
      validationQueryTimeout: 50
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      maxPoolPreparedStatementPerConnectionSize: 20
      filters: stat,wall,log4j
      filter:
        stat:
          enabled: true
          log-slow-sql: true
          slow-sql-millis: 10000
          merge-sql: true
        slf4j:
          enabled: true
          connection-log-enabled: true
          connection-close-after-log-enabled: true
          connection-commit-after-log-enabled: true
          connection-connect-after-log-enabled: true
          connection-connect-before-log-enabled: true
          connection-log-error-enabled: true
          data-source-log-enabled: true
          result-set-log-enabled: true
          statement-log-enabled: true
        wall:
          enabled: true
          config:
            alter-table-allow: false
            truncate-allow: false
            drop-table-allow: false
            #是否允许非以上基本语句的其他语句，缺省关闭，通过这个选项就能够屏蔽DDL
            none-base-statement-allow: false
            #检查UPDATE语句是否无where条件，这是有风险的，但不是SQL注入类型的风险
            update-where-none-check: true
            #SELECT ... INTO OUTFILE 是否允许，这个是mysql注入攻击的常见手段，缺省是禁止的
            select-into-outfile-allow: false
            #是否允许调用Connection.getMetadata方法，这个方法调用会暴露数据库的表信息
            metadata-allow: true
            #允许多条sql一起执行
            multiStatementAllow: true
          #对被认为是攻击的SQL进行LOG.error输出
          log-violation: true
          #对被认为是攻击的SQL抛出SQLExcepton
          throw-exception: true
          #db-type: mysql
      web-stat-filter:
        enabled: true
        url-pattern: /*
        exclusions: '*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*'
        #你可以配置principalSessionName，使得druid能够知道当前的cookie的用户是谁
        #principal-cookie-name: admin
        #你可以配置principalSessionName，使得druid能够知道当前的session的用户是谁
        #principal-session-name: admin
        #设置profileEnable能够监控单个url调用的sql列表。
        profile-enable: true
        #session统计功能
        session-stat-enable: false
        #最大session数
        session-stat-max-count: 100000
      stat-view-servlet:
        #allow: ${GATEWAY_HOST:172.26.114.241}
        enabled: true
        login-username: ${DRUID_USER:admin}
        login-password: ${DRUID_PWD:admin}
        url-pattern: /druid/*
        #允许清除记录
        reset-enable: false
  rabbitmq:
    host: 134.96.249.38
    port: 5672
    username: Sub_Pub_Uoo
    password: FUkCrcs4SIzlnia7OoosTd$rO5$lR8669ISeHjji

  zipkin:
    base-url: http://134.96.217.244:8600
  sleuth:
    sampler:
      percentage: 0.5

eureka:
  instance:
    appname: business-organization
    hostname: ${spring.cloud.client.ipAddress}
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.cloud.client.ipAddress}:${server.port}
    lease-expiration-duration-in-seconds: 30
    lease-renewal-interval-in-seconds: 10
  server:
    port: 8751
  client:
    service-url:
      defaultZone: http://134.96.217.231:8751/eureka/,http://134.96.217.232:8751/eureka/,http://134.96.217.233:8751/eureka/

