### DEV ###
---
server:
  port: 11100
  #port: 30024
spring:
  application:
    name: business-organization
  # 目前使用的是我的阿里云上的mysql数据库
#  datasource:
#    url: jdbc:oracle:thin:@134.96.167.19:1521:uomdb1
#    username: octopus
#    password: octopus
  datasource:
    druid:
      #url: jdbc:oracle:thin:@134.129.68.156:1521:fjtpdb
      #driver-class-name:  oracle.jdbc.OracleDriver
      #username: uoo137
      #password: uoo137
      #      url: jdbc:mysql://127.0.0.1:3306/springboot?characterEncoding=utf8&useSSL=false
      #      driver-class-name:  com.mysql.jdbc.Driver
      #      username: root
      #      password: 123456
      #=======
      #      url: jdbc:oracle:thin:@134.96.167.19:1521:uomdb1
      #      driver-class-name:  oracle.jdbc.OracleDriver
      #      username: uom
      #      password: uom

      driver-class-name:  oracle.jdbc.OracleDriver
      url: jdbc:oracle:thin:@134.96.167.19:1521:uomdb1
      username: octopus
      password: octopus

      initial-size: 10
      min-idle: 4
      max-active: 30
      max-wait: -1
      time-between-eviction-runs-millis: 600000
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1 FROM DUAL
      validationQueryTimeout: 50
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      maxPoolPreparedStatementPerConnectionSize: 20
      filters: stat,wall,log4j
      filter:
        stat:
          enabled: true
          log-slow-sql: true
          slow-sql-millis: 10000
          merge-sql: true
        slf4j:
          enabled: true
          connection-log-enabled: true
          connection-close-after-log-enabled: true
          connection-commit-after-log-enabled: true
          connection-connect-after-log-enabled: true
          connection-connect-before-log-enabled: true
          connection-log-error-enabled: true
          data-source-log-enabled: true
          result-set-log-enabled: true
          statement-log-enabled: true
        wall:
          enabled: true
          config:
            alter-table-allow: false
            truncate-allow: false
            drop-table-allow: false
            #是否允许非以上基本语句的其他语句，缺省关闭，通过这个选项就能够屏蔽DDL
            none-base-statement-allow: false
            #检查UPDATE语句是否无where条件，这是有风险的，但不是SQL注入类型的风险
            update-where-none-check: true
            #SELECT ... INTO OUTFILE 是否允许，这个是mysql注入攻击的常见手段，缺省是禁止的
            select-into-outfile-allow: false
            #是否允许调用Connection.getMetadata方法，这个方法调用会暴露数据库的表信息
            metadata-allow: true
            #允许多条sql一起执行
            multiStatementAllow: true
          #对被认为是攻击的SQL进行LOG.error输出
          log-violation: true
          #对被认为是攻击的SQL抛出SQLExcepton
          throw-exception: true
          db-type: oracle
      web-stat-filter:
        enabled: true
        url-pattern: /*
        exclusions: '*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*'
        #你可以配置principalSessionName，使得druid能够知道当前的cookie的用户是谁
        #principal-cookie-name: admin
        #你可以配置principalSessionName，使得druid能够知道当前的session的用户是谁
        #principal-session-name: admin
        #设置profileEnable能够监控单个url调用的sql列表。
        profile-enable: true
        #session统计功能
        session-stat-enable: false
        #最大session数
        session-stat-max-count: 100000
      stat-view-servlet:
        #allow: ${GATEWAY_HOST:172.26.114.241}
        enabled: true
        login-username: ${DRUID_USER:admin}
        login-password: ${DRUID_PWD:admin}
        url-pattern: /druid/*
        #允许清除记录
        reset-enable: false
  zipkin:
    base-url: http://localhost:20010
  sleuth:
    sampler:
      percentage: 1.0
  data:
    solr:
      host: http://localhost:8888/uooSolr
      #host: http://134.96.253.221:8762/uooSolr
      repositories:
        enabled: true
  rabbitmq:
    host: 134.96.253.221
    port: 5672
    username: root
    password: 123
#eureka:
#  client:
#    service-url:
#      #defaultZone: http://134.96.253.221:8762/eureka
#      defaultZone: http://localhost:8762/eureka
eureka:
  client:
    service-url:
      #defaultZone: http://localhost:8762/eureka
      defaultZone: http://134.96.253.221:8762/eureka
    instance:
      prefer-ip-address: true
      instance-id: ${spring.application.name}:${spring.cloud.client.ipAddress}:${spring.application.instance_id:${server.port}}


mybatis-plus:
  mapper-locations: classpath:mapper/*.xml
  global-config:
    db-column-underline: true
    field-strategy: 2
    id-type: 1
    refresh-mapper: true
...
### DEV END ###

### FAT ###
---
server:
  port: 30020
spring:
  application:
    name: FAT-uoo-organization-1
  profiles: FAT-uoo-organization-1
  # 目前使用的是我的阿里云上的mysql数据库
  datasource:
    url: jdbc:mysql://localhost:3306/springboot?useSSL=true&useUnicode=true&characterEncoding=utf-8&verifyServerCertificate=false
    username: root
    password: 123456
  zipkin:
    base-url: http://localhost:20010
  sleuth:
    sampler:
      percentage: 1.0
eureka:
  client:
    service-url:
      defaultZone: http://FAT-uoo-register-1:8761/eureka/, http://FAT-uoo-register-2:8762/eureka/
mybatis-plus:
  mapper-locations: classpath:mapper/**Mapper.xml
...
---
server:
  port: 30021
spring:
  application:
    name: FAT-uoo-organization-2
  profiles: FAT-uoo-organization-2
  # 目前使用的是我的阿里云上的mysql数据库
  datasource:
    url: jdbc:mysql://localhost:3306/springboot?useSSL=true&useUnicode=true&characterEncoding=utf-8&verifyServerCertificate=false
    username: root
    password: 123456
  zipkin:
    base-url: http://localhost:20010
  sleuth:
    sampler:
      percentage: 1.0
eureka:
  client:
    service-url:
      defaultZone: http://FAT-uoo-register-1:8761/eureka/, http://FAT-uoo-register-2:8762/eureka/
mybatis:
  mapper-locations: classpath:mapper/*.xml
...
### FAT END ###

### PROD ###
# 生产环境配置
# 暂无
### PROD END ###
